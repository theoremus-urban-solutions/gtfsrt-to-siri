name: Tests

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Run unit tests
      run: go test ./tests/unit/... -v -race -coverprofile=unit-coverage.out
      
    - name: Run integration tests
      run: go test ./tests/integration/... -v -race -coverprofile=integration-coverage.out
      
    - name: Generate overall coverage
      run: |
        go test ./... -coverprofile=coverage.out -covermode=atomic
        go tool cover -func=coverage.out
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Check test count
      run: |
        TEST_COUNT=$(go test ./tests/... -v 2>&1 | grep -c "^=== RUN" || true)
        echo "Total tests: $TEST_COUNT"
        if [ "$TEST_COUNT" -lt 20 ]; then
          echo "Warning: Only $TEST_COUNT tests found. Expected at least 20."
        fi

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        args: --timeout=5m

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Build
      run: go build -v ./cmd/gtfsrt-to-siri/
      
    - name: Verify binary
      run: ./gtfsrt-to-siri --help || echo "Binary created successfully"


