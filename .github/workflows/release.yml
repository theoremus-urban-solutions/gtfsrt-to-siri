name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

permissions:
  contents: write  # Required to create releases and upload assets

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for changelog
        
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
    - name: Build binaries for all platforms
      run: |
        # Linux amd64
        GOOS=linux GOARCH=amd64 go build -ldflags "-X main.Version=${{ steps.version.outputs.VERSION }}" -o gtfsrt-to-siri-linux-amd64 ./cmd/gtfsrt-to-siri
        
        # macOS amd64 (Intel)
        GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.Version=${{ steps.version.outputs.VERSION }}" -o gtfsrt-to-siri-darwin-amd64 ./cmd/gtfsrt-to-siri
        
        # macOS arm64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.Version=${{ steps.version.outputs.VERSION }}" -o gtfsrt-to-siri-darwin-arm64 ./cmd/gtfsrt-to-siri
        
        # Windows amd64
        GOOS=windows GOARCH=amd64 go build -ldflags "-X main.Version=${{ steps.version.outputs.VERSION }}" -o gtfsrt-to-siri-windows-amd64.exe ./cmd/gtfsrt-to-siri
        
    - name: Create release archives
      run: |
        # Linux
        tar -czf gtfsrt-to-siri-${{ steps.version.outputs.VERSION }}-linux-amd64.tar.gz gtfsrt-to-siri-linux-amd64
        
        # macOS Intel
        tar -czf gtfsrt-to-siri-${{ steps.version.outputs.VERSION }}-darwin-amd64.tar.gz gtfsrt-to-siri-darwin-amd64
        
        # macOS Apple Silicon
        tar -czf gtfsrt-to-siri-${{ steps.version.outputs.VERSION }}-darwin-arm64.tar.gz gtfsrt-to-siri-darwin-arm64
        
        # Windows
        zip gtfsrt-to-siri-${{ steps.version.outputs.VERSION }}-windows-amd64.zip gtfsrt-to-siri-windows-amd64.exe
        
    - name: Generate checksums
      run: |
        sha256sum gtfsrt-to-siri-${{ steps.version.outputs.VERSION }}-*.tar.gz gtfsrt-to-siri-${{ steps.version.outputs.VERSION }}-*.zip > SHA256SUMS
        cat SHA256SUMS
        
    - name: Generate changelog
      id: changelog
      run: |
        # Get commits since last tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -z "$PREVIOUS_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
        else
          CHANGELOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
        fi
        
        # Save to file for multi-line handling
        echo "$CHANGELOG" > changelog.txt
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.version.outputs.VERSION }}
        body_path: changelog.txt
        files: |
          gtfsrt-to-siri-${{ steps.version.outputs.VERSION }}-linux-amd64.tar.gz
          gtfsrt-to-siri-${{ steps.version.outputs.VERSION }}-darwin-amd64.tar.gz
          gtfsrt-to-siri-${{ steps.version.outputs.VERSION }}-darwin-arm64.tar.gz
          gtfsrt-to-siri-${{ steps.version.outputs.VERSION }}-windows-amd64.zip
          SHA256SUMS
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-binaries
        path: |
          gtfsrt-to-siri-${{ steps.version.outputs.VERSION }}-*.tar.gz
          gtfsrt-to-siri-${{ steps.version.outputs.VERSION }}-*.zip
          SHA256SUMS
        retention-days: 30

