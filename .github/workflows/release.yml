name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  test:
    name: Run Tests Before Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Run tests
      run: |
        go test ./tests/unit/... -v
        go test ./tests/integration/... -v
        
    - name: Build
      run: go build -v ./cmd/gtfsrt-to-siri/

  release:
    name: Create Release
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Validate version format
      run: |
        if [[ ! "${{ inputs.version }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Version must be in format vX.Y.Z (e.g., v1.0.0)"
          exit 1
        fi
    
    - name: Check if tag exists
      run: |
        if git rev-parse "${{ inputs.version }}" >/dev/null 2>&1; then
          echo "Error: Tag ${{ inputs.version }} already exists"
          exit 1
        fi
    
    - name: Build binaries
      run: |
        mkdir -p dist
        
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -o dist/gtfsrt-to-siri-linux-amd64 ./cmd/gtfsrt-to-siri/
        
        # Linux ARM64
        GOOS=linux GOARCH=arm64 go build -o dist/gtfsrt-to-siri-linux-arm64 ./cmd/gtfsrt-to-siri/
        
        # macOS AMD64
        GOOS=darwin GOARCH=amd64 go build -o dist/gtfsrt-to-siri-darwin-amd64 ./cmd/gtfsrt-to-siri/
        
        # macOS ARM64 (M1/M2)
        GOOS=darwin GOARCH=arm64 go build -o dist/gtfsrt-to-siri-darwin-arm64 ./cmd/gtfsrt-to-siri/
        
        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -o dist/gtfsrt-to-siri-windows-amd64.exe ./cmd/gtfsrt-to-siri/
    
    - name: Create checksums
      run: |
        cd dist
        sha256sum * > checksums.txt
        cd ..
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        
        if [ -z "$LAST_TAG" ]; then
          echo "First release"
          COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
        else
          echo "Changes since $LAST_TAG"
          COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
        fi
        
        # Create release notes
        cat > release_notes.md <<EOF
        ## What's Changed
        
        $COMMITS
        
        ## Installation
        
        ### Go Library
        \`\`\`bash
        go get github.com/theoremus-urban-solutions/gtfsrt-to-siri@${{ inputs.version }}
        \`\`\`
        
        ### CLI Binaries
        Download the appropriate binary for your platform from the assets below.
        
        **Linux:**
        \`\`\`bash
        # AMD64
        wget https://github.com/theoremus-urban-solutions/gtfsrt-to-siri/releases/download/${{ inputs.version }}/gtfsrt-to-siri-linux-amd64
        chmod +x gtfsrt-to-siri-linux-amd64
        
        # ARM64
        wget https://github.com/theoremus-urban-solutions/gtfsrt-to-siri/releases/download/${{ inputs.version }}/gtfsrt-to-siri-linux-arm64
        chmod +x gtfsrt-to-siri-linux-arm64
        \`\`\`
        
        **macOS:**
        \`\`\`bash
        # Intel (AMD64)
        wget https://github.com/theoremus-urban-solutions/gtfsrt-to-siri/releases/download/${{ inputs.version }}/gtfsrt-to-siri-darwin-amd64
        chmod +x gtfsrt-to-siri-darwin-amd64
        
        # Apple Silicon (ARM64)
        wget https://github.com/theoremus-urban-solutions/gtfsrt-to-siri/releases/download/${{ inputs.version }}/gtfsrt-to-siri-darwin-arm64
        chmod +x gtfsrt-to-siri-darwin-arm64
        \`\`\`
        
        **Windows:**
        Download \`gtfsrt-to-siri-windows-amd64.exe\` from the assets below.
        
        ## Verification
        
        Verify the download with SHA256 checksums:
        \`\`\`bash
        sha256sum -c checksums.txt
        \`\`\`
        
        ## Documentation
        
        - [Library Usage](https://github.com/theoremus-urban-solutions/gtfsrt-to-siri/blob/master/README.md)
        - [CLI Documentation](https://github.com/theoremus-urban-solutions/gtfsrt-to-siri/blob/master/cmd/gtfsrt-to-siri/README.md)
        - [Migration Guide](https://github.com/theoremus-urban-solutions/gtfsrt-to-siri/blob/master/docs/MIGRATION.md)
        
        **Full Changelog**: https://github.com/theoremus-urban-solutions/gtfsrt-to-siri/compare/${LAST_TAG}...${{ inputs.version }}
        EOF
        
        echo "Generated release notes"
    
    - name: Create Git tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "${{ inputs.version }}" -m "Release ${{ inputs.version }}"
        git push origin "${{ inputs.version }}"
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ inputs.version }}
        name: Release ${{ inputs.version }}
        body_path: release_notes.md
        prerelease: ${{ inputs.prerelease }}
        files: |
          dist/*
        draft: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Summary
      run: |
        echo "## Release Created! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** ${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Pre-release:** ${{ inputs.prerelease }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Binaries Built:" >> $GITHUB_STEP_SUMMARY
        echo "- Linux AMD64" >> $GITHUB_STEP_SUMMARY
        echo "- Linux ARM64" >> $GITHUB_STEP_SUMMARY
        echo "- macOS AMD64" >> $GITHUB_STEP_SUMMARY
        echo "- macOS ARM64 (M1/M2)" >> $GITHUB_STEP_SUMMARY
        echo "- Windows AMD64" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "[View Release](https://github.com/theoremus-urban-solutions/gtfsrt-to-siri/releases/tag/${{ inputs.version }})" >> $GITHUB_STEP_SUMMARY
